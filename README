OpenBlocksファームウェア作成ガイド

ぷらっとホーム株式会社

Copyright (c) 2013, 2014 Plat'Home CO., LTD.

1. はじめに

このソフトウェアを使えばOpenBlocks IoT BX1のファームウェア
を作成することができます。内容は、シェルスクリプトとファームウェアに
含めるファイルです。

2. 対応ファームウェア

3. 準備

3.1. 作成ホスト

作成ホストのOSはUbuntu 14.04 amd64です。
ホストを用意して、そのOSをインストールします。ホストは物理マシンと
仮想マシンのどちらでもよろしいです。インターネットに接続できるよう、
ネッワークの設定をしてください。

3.2. Gitリポジトリの取得

このソフトウェアはGitリポジトリから取得できます。

作成ホストにgitパッケージをインストールします。

  # apt-get update
  # apt-get install git

Gitリポジトリを取得します。

  $ git clone git://github.com/plathome/bx1_firmware.git

以下では、ディレクトリdebian_based_firmwareに移動したものとして説明し
ます。

3.3. クロス開発環境


3.4. カーネルソース

3.4.1. 取得

カーネルソースをぷらっとホームのFTPサイトftp.plathome.co.jpからダウン
ロードします。

ftp://ftp.plathome.co.jp/pub/BX1/wheezy/3.10.17-5/source/linux-3.10.17.tar.gz

3.4.2. 展開

ディレクトリsourceには、TARGETをその名前としたディレクトリがあるので、
そこにカーネルソースを展開してください。その結果、ディレクトリ
source/TARGET/linux-KERNELが作成されます。TARGETとKERNELは、ご自身の
文字列に置き換えてください。

3.5. DVDイメージ

DIST=wheezyの場合、DebianのDVDイメージをDebianのミラーサイトからダウ
ンロードしてディレクトリisofilesにコピーします。

ファイルbuild_ramdisk/config.shのcase文中のISOFILEからDVDイメージのフ
ァイル名が分ります。

以下はファイル名の例です。

TARGET=obsbx1の場合
debian-7.8.0-i386-DVD-1.iso

3.6 その他必要なパッケージ
その他必要パッケージをインストールします。
  # apt-get install build-essential libncurses5-dev debootstrap gcc-multilib

4. 作成

ファームウェアを作成します。シェルスクリプトbuild_ramdisk/buildall.sh
のオプション-MにTARGET、-DにDISTを指定します。TARGET=obsbx1、
DIST=wheezyの場合、

  # cd build_ramdisk
  # ./buildall.sh -M obsbx1 -D wheezy

と実行します。

作成されたファームウェア一式は、ディレクトリ
release/TARGET/DIST/KERNEL-PATCHLEVELに置かれます。TARGET, DIST,
KERNEL, PATCHLEVELは、ご自身の文字列に置き換えてください。

例えば、ディレクトリrelease/obsbx1/wheezy/3.10.17-5には、以下のファイ
ルが作成されます。

o MD5.obsbx1: MD5チェックサムファイル
o System.map: カーネルのシステムマップファイル
o kernel-image-3.10.17-5-obsbx1.deb: コマンドdpkgなどでインストールするための
  パッケージ
o ramdisk-wheezy.obsbx1.img.gz: ファームウェアのRAMディスクイメージ
o bzImage: ファームウェアのカーネルイメージ

5. カスタマイズ

本節ではファームウェアのカスタマイズの手順を説明します。

シェルスクリプトbuild_ramdisk/buildall.shを実行することは、
DIST=wheezy, TARGET=obsbx1の場合、以下の通り実行することと同じです。

  # DIST=wheezy TARGET=obsbx1 ./build_debootstrap.sh
  # DIST=wheezy TARGET=obsbx1 ./build_kernel.sh
  # DIST=wheezy TARGET=obsbx1 ./build_ramdisk.sh
  # DIST=wheezy TARGET=obsbx1 ./release_firmware.sh

TARGETとDISTについては、予め次のように設定することで、毎回の指定は不要
になります。

  # export DIST=wheezy TARGET=obsbx1

内容の詳細は各シェルスクリプトを読んでいただくことにして、簡単に説明し
ておきます。以下のTARGETとDISTは、ご自身の文字列に置き換えてください。

o build_debootstrap.sh: debootstrapを実行し、ディレクトリ
  rootfs/DIST_TARGET以下にDebianを仮インストールしています。
o build_kernel.sh: カーネルとカーネルモジュールのコンパイルをしていま
す。
o build_ramdisk.sh: ディレクトリrootfs/DIST_TARGET以下に仮インストー
  ルしたDebianをOpenBlocks用に変更して、RAMディスクイメージを作成して
  います。
o release_firmware.sh: ファームウェア一式を作成しています。

上記のシェルスクリプトを手動で実行すれば、その途中で、カーネルとRAMデ
ィスクイメージのカスタマイズができます。

ファイルbuild_ramdisk/config.shのcase文中のPATCHLEVELには文字列などを
追加、例えば3customとすることをお勧めします。公式ファームウェアとの区
別がはっきりします。

カスタマイズの前に、その準備として、シェルスクリプト
build_ramdisk/buildall.shを実行しておいてください。

5.1. カーネル

カーネルのコンフィグレーションを変更してカーネルをカスタマイズするこ
とができます。
カーネルをカスタマイズしない場合には、「5.2. RAMディスクイメージ」節
に進んでください。

5.1.1. コンフィグレーションの変更


5.1.2. コンパイル

シェルスクリプトbuild_ramdisk/build_kernel.shから順番に実行するか、シ
ェルスクリプトbuild_ramdisk/buildall.shを実行してください。RAMディス
クイメージをカスタマイズする場合、シェルスクリプト
build_ramdisk/build_kernel.shを実行して、次節に進んでください。

5.2. RAMディスクイメージ

シェルスクリプトbuild_ramdisk/build_ramdisk.shの実行が終了すると、デ
ィレクトリrootfs/DIST_TARGETに、RAMディスクに含まれるファイルが仮イン
ストールされます。ディレクトリrootfs/DIST_TARGET以下のファイルを変更
したり、パッケージを追加すれば、RAMディスクイメージのカスタマイズがで
きます。DISTとTARGETは、ご自身のものに置き換えてください。

5.2.1. パッケージの取得

追加するパッケージをDebianのミラーサイトからダウンロードして、ディレ
クトリextradebs/DISTにコピーします。DISTは、ご自身の文字列に置き換え
てください。

5.2.2. パッケージの追加

次のコマンドを実行してパッケージを追加します。DIST=wheezy,
TARGET=obsbx1の場合、

  # DIST=wheezy TARGET=obsbx1 ./08_add_extra_packages.sh

と実行します。

パッケージが追加されたかは、ファイル
rootfs/DIST_TARGET/var/lib/dpkg/statusで確認できます。TARGETとDISTは、
ご自身の文字列に置き換えてください。

5.2.3. RAMディスクイメージの作成

ディレクトリrootfs/DIST_TARGET以下のファイルをもとにRAMディスクイメー
ジを作成します。TARGETとDISTは、ご自身の文字列に置き換えてください。
DIST=wheezy, TARGET=obsbx1の場合、

  # DIST=wheezy TARGET=obsbx1 ./99_create_ramdisk.sh

と実行します。

ファームウェアを作成します。DIST=wheezy, TARGET=obsbx1の場合、

  # DIST=wheezy TARGET=obsbx1 ./release_firmware.sh

と実行します。

5.3. まとめ

一度「5.1.1. コンフィグレーションの変更」と「5.2.1. パッケージの取得」
をすませておけば、シェルスクリプトbuild_ramdisk/buildall.shを実行する
だけでカスタマイズのすんだファームウェアが作成できます。

6. ファームウェアの更新

ファームウェアのカーネルイメージbzImageとファームウェアのRAMディスク
イメージramdisk-wheezy.obsbx1.img.gzをOpenBlocksにネットワーク経由もし
くはUSBメモリでコピーしてください。TARGETは、ご自身の文字列に置き換え
てください。

/dev/mmbclk0p8をマウントし、コピーしたファイルを書き込み、再起動すれば
ファームウェアの更新は完了です。

  # mount /dev/mmcblk0p8 /mnt
  # cp /mnt/bzImage bzImage.orig
  # cp bzImage /mnt
  # cp /mnt/ramdisk-wheezy.obsbx1.img.gz ramdisk-wheezy.obsbx1.img.gz.orig
  # cp ramdisk-wheezy.obsbx1.img.gz /mnt
  # reboot

